{
  "title": "Общие сведения",
  "text": "Для создания любого свойства Prop необходимо в описании приложения либо в html коде указать тип данного свойства.\r\nПри инициализации приложение определит тип данного свойства и на основании его создаст объект Prop.\r\nЕсли тип свойства является стандартным событием например \"click\", 'mouseup' и т. д., то к нему будет присоединен обработчик события который необходимо создать\r\nв объекте method для данного контейнера в описании приложения.\r\nЕсли тип свойства является пользовательским событием, то также как и для обычного события создается обработчик.\r\nВ обработчиках событий оператор `this` - указывает на данный конкретный экземпляр Prop, а далее с помощью навигации можно переходить к любым другим свойствам относительно данного.\r\n\r\nМетоды `setProp(\"newProp\")`, `getProp()` и `removeProp()` работают по разному в зависимости от типа свойства.\r\n\r\nПеречень всех типов:\r\n\r\n* \"text\" - текстовые данные;\r\n* \"html\" - html разметка;\r\n* \"inputvalue\", \"select\" - данные форм ;\r\n* \"checkbox\", \"radio\" - чекбоксы и радио;\r\n* \"class\" -  массив с классами;\r\n* \"render-variant\" -  текущий отображаемый объект;\r\n* \"group\" -  массив контейнеров из данной группы;\r\n\r\nтип **data** - т. к. в данных с типом дата после знака =  идут какие либо данные, то для создания данного типа после \r\nимени массива или контейнера пишется имя data а далее уже какие либо данные, например: data-page-data=\"какие либо данные\",\r\nздесь тип данных определяется по имени свойства оно всегда должно называться data после названия контейнера.\r\n\r\nАтрибуты:  'alt', 'disabled', 'href', 'id', 'src', 'style', 'title'.\r\n\r\nТипы стандартных событий:  'click', 'keydown', 'dblclick', 'contextmenu',  'selectstart', 'mousewheel', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'mousedown', 'keypress', 'keyup', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'abort', 'change'.\r\n\r\n\r\n"
}