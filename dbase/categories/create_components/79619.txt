{
  "title": "Добавление свойств в контейнер",
  "text": "\r\nСвойства это объекты имеющие доступ к свойствам html страницы, также свойства могут быть слушателями событий. Для создания свойства необходимо указать его\r\nимя после имени контейнера, а также указать тип данного свойства. Давайте создадим несколько свойств: my-class, paragraf и btn-click в контейнере page:\r\n\r\n\r\n\r\n```html\r\n<style type=\"text/css\">\r\n \r\n  .new_class { color: red; }\r\n   \r\n</style>\r\n\r\n<div data-page=\"container\"> \r\n\r\n\t<p data-page-paragraf=\"text\" data-page-my_class=\"class\"> <!-- свойство paragraf с типом \"text\" и my_class с типом \"class\" -->\r\n\t\tтекст\r\n\t</p>\r\n\t\r\n\t<button data-page-btn_click=\"click\">Кнопка</button>\t <!-- btn_click - свойство - слушательсобытия \"click\" -->\r\n\t\r\n</div>\r\n```\r\n\r\nНазвание свойства в html идет после названия контейнера и знака \"-\"  (page-), в самом названии свойства знак \"-\" использовать нельзя.\r\nДалее после знака = идет тип свойсва, у нас три разных типа это \"text\", \"class\" и \"click\".\r\nЕсли тип свойства является событием то в описании приложения, в объекте `methods` для данного свойства необходимо указать одноименный метод с обработчиком события.\r\n\r\n\r\n\r\n\r\nДалее в описании приложения:\r\n\r\n``` javascript\r\nvar StateMap = {\r\n\r\n\tpage: {\r\n\t\tcontainer: \"page\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tprops: [\"paragraf\", \"my_class\", \"btn_click\"],  //создали три свойства в контейнере page\r\n\t\t\tmethods: {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tbtn_click: function(){   //одноименный метод для свойства - события;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(this);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tthis.parent.props.paragraf.setProp(\"Новый текст\");\r\n\t\t\t\t\t//this.parent - доступ из конкретного свойства в контейнер \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tthis.parent.props.my_class.setProp(\"new_class\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t}\r\n }\r\n```\r\n\r\nИтак мы создали три свойства одно из которых обработчик события \"click\".\r\nthis - в методе указывает на свойство к которому прикреплен данный обработчик - btn_click.\r\nДалее с помощью .parent.props мы получаем доступ к контейнеру а далее ко всем свойствам контейнера, затем по имени свойства к конкретному свойству.\r\nМетод `setProp` является универсальным и работает по разному в зависимости от типа свойств, для типа \"text\" он меняет текст, а для типа \"class\" он добавляет класс.\r\n\r\nПосле нажатия кнопки изменился текст и добавился новый класс. Далее давайте посмотрим в консоль.\r\nПосле клика в ней появился объект `Prop`."
}