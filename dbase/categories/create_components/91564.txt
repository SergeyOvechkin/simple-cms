{
  "title": "Смена отображаемых компонентов - render-variant",
  "text": "Свойства с типом \"render-variant\" используются для отображения в себе одних и скрытия других компонентов;\r\n\r\nНапример у нас есть компонент page с кнопкой click и свойство variant с типом \"render-variant\",\r\nа также еще два компонента variant1 и variant2, и нам нужно отобразить только один из них в зависимости от ситуации.\r\nПри загрузке страницы сначала должен отображаться компонент variant1. А второй variant2 - будет скрыт. Поэтому мы создадим разметку index.html без второго компонента, второй компонент мы поместим в template.js файл.\r\n\r\n index.html:\r\n\r\n```html\r\n<div data-page=\"container\">\r\n\t<div data-page-variant=\"render-variant\"> \r\n\t\r\n\t\t\t<div data-variant1=\"container\">текст первого варианта</div>\r\n\t\r\n\t</div>\r\n\t<button data-page-click=\"click\">сменить вариант</button>\r\n</div> \r\n\r\n\r\n```\r\n\r\ntemplate.js : \r\n\r\n```javascript\r\n\r\nvar template =` <div data-variant2=\"container\">текст второго варианта</div> `;\r\n\r\n```\r\n\r\nОписание приложения:\r\n```javscript\r\n\t\r\n\tvar StateMap ={\r\n\t\t\tpage: {\r\n\t\t\t\tcontainer: \"page\",\r\n\t\t\t\tprops: [\"variant\", \"click\"],\r\n\t\t\t\tmethods: {\r\n\t\t\t\t\t\r\n\t\t\t\t\tclick: function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tvar variant = this.parent.props.variant; //получаем ссылку на свойство вариант из свойства click;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(variant);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar newVariant = \"variant2\"; //имя нового компонента для отображения\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(variant.renderChild.pathToCоmponent == \"variant2\") newVariant = \"variant1\" //если текущий компонент для отображения \"variant2\" меняем его на \"variant1\"\r\n\r\n\t\t\t\t\t\tvariant.setProp(newVariant); //отображаем новый вариант\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t},\r\n\t\t\tvariant1: {\r\n\t\t\t\tcontainer: \"variant1\",\r\n\t\t\t\tprops: [],\r\n\t\t\t\tmethods: {\t\t\t\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t},\r\n\t\t\tvariant2: {\r\n\t\t\t\tcontainer: \"variant2\",\r\n\t\t\t\tprops: [],\r\n\t\t\t\tmethods: {\t\t\t\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t},\r\n            stateSettings: {\r\n                    templateVar: template, //указали в настройках искать разметку недостающих шаблонов в переменной template из файла template.js\r\n           }\t\t\t\r\n\t\t\t\r\n\t}\r\n\r\n```\r\nВ примере выше мы создали разметку без второго варианта шаблона, который мы поместили в файл template.js для удобства. Загрузка шаблонов таким способом, создает компоненты синхронно, после того как загрузятся все необходимые js файлы.\r\n\r\n"
}